Zmienić tytuł aby nie używał słowa LEGO

1. Wstęp
- wprowadzenie
- przedstawienie zakresu?
- CAD

2. Prezentacja innych rozwiązan
- LeoCAD
- MecaBricks
- Stud.io

3. Wykorzystane bazy:
	- ldraw
	- brickable

4. Przygotowanie danych:
	- opis wykorzystanych tabel z brickable: parts oraz part_categories
	- filtoranie modeli na podstawie kategorii[opisać że próbowałem wybrać te które mają okrągłę łączenie proste] 
	- filtrowanie obie bazy posiadają dane id modelu (przecięcie zbioru, ang. intersection)
	- za pomocą programu ldview wyeksportowanie tych modeli do formatu obj
 elementów ale miały one niejedolite kolory [tabela inventory_parts]
	- za pomocą [https://github.com/CesiumGS/obj2gltf] eksport do gltf (opisać dlaczego to zrobiłem, [dobre pytanie xd])
	- za pomocą programu ldview renderowanie thumbnail[plik ldview_thumbnail.bat] opisać ustawienia i o tym że miałem w bazie linki do obrazków ale były w różnych kolorach bo połaczenie z inventory_parts co było dziwnym rozwiazaniem

5. Znalezienie miejsc łączeń
    - tworzenie depth mapy
    - filtr Sobla
    - wykrywanie krawędzi
    - filtrowanie kształtu krawędzi
    - różnica między wykrywaniem górnymch a dolnych łączeń i sposób uproszczenia dołu
    - załadowanie modeli do bazy danych Mongodb i krótki wstęp o tym

6. Frontend
    - wykorzystanie frameworku React
    - przedstawienie strony z budowaniem folder (/Builder) - bez odtwarzania na razie i grup
        - opis modułu Explorer:
            - przedstawia listę elementów które można przesunąć na scenę żeby się władowały
            - filtrowanie po kategorii, nazwie, rozmiarze
            - opis api i na razie: get_thumbnails, get_model
        - wprowadzenie do three.js, opis modułu Modeler
            * główny Canvas i wewnątrz niego: 
                Modele na scenie, lista Model: oddzielnie opisać i że wygenerowane przez three fiber moduł
                "Podłoga", 
                Kontrolowanie obiektów, - typy translacja/ rotacja, ograniczennia ich 10, 10, 8, 90 stopni, zaokrąglanie pozycji
                Gizmo
            - teraz funkcjonalności poszczególnych
                * handleDrop -> getEmptySpace, addNewModel, setBeginPosition
                * Skróty delete, shift niekoniecznie

7. Symulacja łączenia
- Strona Backendu:
    - wczytanie sceny z Frontendu
    - Pobranie z bazy miejsc łączeń każdego elementu
    - zaaplikowanie na nich translacji i rotacji ze sceny
    - zamiana danych na słownik pozcyja: (nazwa modelu, wysokość)
    - Stworzenie grafu który jako klucz ma nazwę modelu a wartość to do niego podłączone modele
    - wykorzystanie algorytmu dfs do połączenie modeli w grupy 

- Strona Frontendu:
    - po wskazaniu elementu który jest w grupie zaznaczenie grupy, gdzie jeden jest głównym elementem
    - aplikowanie translacji, rotacji na sub elementach grupy jako zmiana względem poprzedniego stanu
    - możliwość zaznaczenia pod grupy, która sprawdza wysokość elementów w grupie i tylko te nad bierze

8. Zapisywanie postępu
- Wykorzystuje Auth0
- Tworzenie konta, logowanie
- możliwość zapisu i nadpisywania zestawów - opis rozszerzenia bazy danych
- opis strony z przeglądaniem swoich zestawów do kontynuowania
- opis automatycznego zapisywanie w localStorage

9. Tworzenie instrukcji
- w ten sposób udostępnianie zestawów, guzik znajduje się...
Backendu
- przedstawienie z czego składa się instruckja lista[kroków]
- dzielenie sceny na poszczególne kroki na podstawie grafu [algorytm]
- zapis do bazy i zwrócenie kroków oraz set_id do Frontendu

Frontend
- odebranie kroków
- iterowanie po nich generując obraz i usuwając elementy z niego
- zwrócenie zdjęć do zapisu do bazy danych


10. Odtwarzanie zestawów
    - strona Browse
    - różnice do opisania: 
    Explorer:
    - wczytuje tylko odpowiednie elementy zmiana na przechodznie stepów
    Part: 
    - kolor i liczba
    Modeler:
    - fetchInstruction
    - setUpReconstruction
    - correctSteps
    - checkInstruction
    - przy zapisywaniu postępu zapisywany także set_id aby była zawsze wczytywana instruckja
    - chyba wyłączyć usuwanie

    Backend:
        - porównywanie sceny z instrukcją, łączenia i modele
        - najpierw długość poszczególnych modeli
        - czy grafy są izomorficzne i co oznacza
        - kolor i rodzaj modelu na odpowiednich pozycjach grafu
        - maski w tym rotacja 


11. Podsumowanie
- przedstawienie modelu bazy danych?
	

Frontend:
React użycie komponentow i routowania
- strony: 
	- Builder
	- Account - Auth0
	- Browse - przeglądanie zestawów innych użytkowników
	- YourSets - przeglądanie własnych zestawów


--------------------------------------------------
plik Model:
- useSnapshot
- hovered
- nodes
- ref
- findHeight
- getModelsHigherThan
- handleClick
- funkcje w meshu phong itp


plik Explorer
- set_id 
- color
- parts
- filter
- category
- wielkości
- pobieranie elementów lub specjalnie z danego kroku insturkcji
- lista Part

plik Part:
- obrazek
- nazwa modelu
- przeuswalny
- ewentualnie kolor i liczba do odtwarzania

plik Main:
łączy moduły